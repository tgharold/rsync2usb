#!/bin/bash

# read a configuration file
# $1 - filename (full path)
read_config_file () 
{
  echo "Reading config file: $1"
  if test -f "$1"; then 
    #echo "The File Exists";
    while read line; do
      if [[ "$line" =~ ^[^#]*= ]]; then
        setting_name=$(trim "${line%%=*}");
        setting_value=$(trim "${line#*=}");
        #echo 'found:' ${setting_name}'='${setting_value}
        case "$setting_name" in
          backup_dir)
            Configuration[backup_dir]="${setting_value}"
            ;;
          job_directory)
            Configuration[job_directory]="${setting_value}"
            ;;
          lvm_lvname)
            Configuration[lvm_lvname]="${setting_value}"
            ;;
          lvm_snapshotadd)
            check_message="Value is not an integer between 1 and 2000."
            case "${setting_value}" in
              ''|*[!0-9]*)
                config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                exit 1
                ;;
              *)
                if [[ ${setting_value} -ge 0 && ${setting_value} -le 2000 ]] ; then
                Configuration[lvm_snapshotadd]="${setting_value}"
                else
                  config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                  exit 1
                fi
                ;;
            esac
            ;;
          lvm_thinflag)
            Configuration[lvm_thinflag]="${setting_value}"
            ;;
          lvm_vgname)
            if [ "${setting_value}" ]; then
              if vgdisplay --colon | fgrep -q " ${setting_value}:"; then
                Configuration[lvm_vgname]="${setting_value}"
              else
                check_message="LVM Volume Group does not exist."
                config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                exit 1
              fi
            fi
            ;;
          minimum_free_space)
            check_message="Value is not an integer between 1 and 2000."
            case "${setting_value}" in
              ''|*[!0-9]*) 
                config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                exit 1
                ;;
              *)
                if [[ ${setting_value} -ge 0 && ${setting_value} -le 2000 ]] ; then 
                Configuration[minimum_free_space]="${setting_value}"
                else
                  config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                  exit 1
                fi
                ;;
            esac
            ;;
          minimum_free_inodes)
            check_message="Value is not an integer between 1 and 250000."
            case "${setting_value}" in
              ''|*[!0-9]*)
                config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                exit 1
                ;;
              *)
                if [[ ${setting_value} -ge 0 && ${setting_value} -le 250000 ]] ; then
                Configuration[minimum_free_inodes]="${setting_value}"
                else
                  config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                  exit 1
                fi
                ;;
            esac
            ;;
          usb_base)
            Configuration[usb_base]="${setting_value}"
            ;;
          usb_prefix)
            Configuration[usb_prefix]="${setting_value}"
            ;;
          usb_filename)
            Configuration[usb_filename]="${setting_value}"
            ;;
          usb_suffix)
            Configuration[usb_suffix]="${setting_value}"
            ;;
          verbosity)
            check_message="Value is not an integer between 1 and 2."
            case "${setting_value}" in
              ''|*[!0-9]*)
                config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                exit 1
                ;;
              *)
                if [[ ${setting_value} -ge 0 && ${setting_value} -le 2 ]] ; then
                Configuration[verbosity]="${setting_value}"
                else
                  config_error "$1" "${setting_name}" "${setting_value}" "${check_message}"
                  exit 1
                fi
                ;;
            esac
            ;;
          *)
            config_error "$1" "${setting_name}" "${setting_value}" "Variable name is not valid."
            exit 1
            ;;
        esac;
      fi
    done < "$1";
  else
    echo "Did not find config file: $1"
  fi
}

